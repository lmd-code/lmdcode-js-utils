"use strict";class LmdStorage{constructor(a,b="_map"){this.storeName=a,this.mapKey=b,this.data=this.getStore(),this._isEnabled=null}get isEnabled(){if(this._isEnabled===void 0||null===this._isEnabled)try{const a="LmdStorage Test";localStorage.setItem("_lmdstorage_test",a),localStorage.getItem("_lmdstorage_test")===a?(localStorage.removeItem("_lmdstorage_test"),this._isEnabled=!0):this._isEnabled=!1}catch(a){this._isEnabled=!1}return this._isEnabled}get count(){return void 0===this.data||null===this.data?0:this.data.size}getStore(){let a;try{a=localStorage.getItem(this.storeName)}catch(a){console.warn("Could not get saved data, a blank store has been created.")}return this.mapify(a)}setStore(){try{localStorage.setItem(this.storeName,this.jsonify(this.data))}catch(a){console.warn("Could not save data.")}}getItem(a){return this.data.get(a)}getItems(){return this.mapify(this.jsonify(this.data))}setItem(a,b,c=!1){this.data.set(a,b),c||this.setStore()}setItems(a,b=!1){let c=0;for(const d in a)a.hasOwnProperty(d)&&(this.data.set(d,a[d]),c++);0<c&&!b&&this.setStore()}removeItem(a,b=!1){this.data.delete(a)&&!b&&this.setStore()}removeItems(a,b=!1){let c=0;for(let d=0;d<a.length;d++)this.data.delete(a[d])&&c++;0<c&&!b&&this.setStore()}saveAll(a=null){if(null!==a&&a instanceof Map){this.data.clear();for(const[b,c]of a)this.data.set(b,c)}this.setStore(),this.getStore()}clearAll(){this.data.clear();try{localStorage.clear(this.storeName)}catch(a){console.warn("Could not clear stored data.")}}jsonify(a){if(a instanceof Map)try{const b=JSON.stringify(a,(a,b)=>b instanceof Map?{[this.mapKey]:Array.from(b.entries())}:b);if(void 0!==b)return b}catch(a){console.warn("Could not create JSON string.")}return"{}"}mapify(a){if(a!==void 0&&null!==a&&""!==a)try{const b=JSON.parse(a,(a,b)=>"object"==typeof b&&null!==b&&b.hasOwnProperty(this.mapKey)?new Map(b[this.mapKey]):b);if(b instanceof Map)return b}catch(a){console.warn("Could not parse JSON string.")}return new Map}}