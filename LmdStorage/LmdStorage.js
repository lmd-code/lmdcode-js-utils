"use strict";class LmdStorage{constructor(t,e="_map"){this.storeName=t,this.mapKey=e,this.data=this.getStore()}get count(){return null===this.data?0:this.data.size}getStore(){return this.mapify(localStorage.getItem(this.storeName))}setStore(){try{localStorage.setItem(this.storeName,this.jsonify(this.data))}catch(t){console.error(t.message)}}getItem(t){return this.data.get(t)}getItems(){return this.mapify(this.jsonify(this.data))}setItem(t,e,s=!1){this.data.set(t,e),s||this.setStore()}setItems(t,e=!1){let s=0;for(const e in t)t.hasOwnProperty(e)&&(this.data.set(e,t[e]),s++);s>0&&!e&&this.setStore()}removeItem(t,e=0){this.data.delete(t)&&!e&&this.setStore()}removeItems(t,e=0){let s=0;for(let e=0;e<t.length;e++)this.data.delete(t[e])&&s++;s>0&&!e&&this.setStore()}saveAll(t=null){if(null!==t&&t instanceof Map){this.data.clear();for(const[e,s]of t)this.data.set(e,s)}this.setStore(),this.getStore()}clearAll(){this.data.clear(),localStorage.clear(this.storeName)}jsonify(t){if(t instanceof Map)try{let e=JSON.stringify(t,(t,e)=>e instanceof Map?{[this.mapKey]:Array.from(e.entries())}:e);if(void 0!==e)return e}catch(t){console.error(t.message)}return"{}"}mapify(t){try{let e=JSON.parse(t,(t,e)=>"object"==typeof e&&null!==e&&e.hasOwnProperty(this.mapKey)?new Map(e[this.mapKey]):e);if(e instanceof Map)return e}catch(t){console.error(t.message)}return new Map}}